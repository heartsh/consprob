use utils::*;
lazy_static! {
  pub static ref STEM_PARAMS: StemParams = {
    StemParams {
      lbaps_with_base_pairs: [((C, C), -2.552405938933297e0), ((C, U), -3.289906615701631e0), ((U, C), -3.289906615701631e0), ((G, U), -3.6417402323334405e0), ((U, G), -3.6417402323334405e0), ((C, G), -4.068808844393202e0), ((G, C), -4.068808844393202e0), ((A, G), -3.2239662356231245e0), ((G, A), -3.2239662356231245e0), ((G, G), -2.351413321217457e0), ((A, A), -1.8479104593095326e0), ((A, U), -3.1105407628870765e0), ((U, A), -3.1105407628870765e0), ((A, C), -3.535456678484717e0), ((C, A), -3.535456678484717e0), ((U, U), -2.383731048339793e0), ].iter().cloned().collect(),
      logps_with_bases: [(G, -4.847181832262509e0), (A, -4.44725288521356e0), (U, -4.63180831145427e0), (C, -4.91757696529144e0), ].iter().cloned().collect(),
      legps_with_bases: [(G, -4.007474990026779e0), (A, -3.8136638569502503e0), (U, -3.8528756115548477e0), (C, -4.086814657847233e0), ].iter().cloned().collect(),
      lbpaps_with_base_quadruples_1: [((C, G, G, C), -4.78458964711906e0), ((G, C, C, G), -4.78458964711906e0), ((A, U, A, U), -4.005271138697914e0), ((U, G, U, G), -5.562359080166522e0), ((G, C, G, U), -5.311117451189997e0), ((G, U, G, C), -5.311117451189997e0), ((G, U, U, G), -7.692591053695495e0), ((U, G, G, U), -7.692591053695495e0), ((C, G, U, G), -5.330805317973903e0), ((U, G, C, G), -5.330805317973903e0), ((G, U, G, U), -5.370718169718514e0), ((G, C, U, A), -5.33393265897201e0), ((U, A, G, C), -5.33393265897201e0), ((G, U, U, A), -6.841576250078794e0), ((U, A, G, U), -6.841576250078794e0), ((A, U, U, A), -5.327682439742494e0), ((U, A, A, U), -5.327682439742494e0), ((G, C, G, C), -3.2400098017347823e0), ((A, U, G, U), -5.634181969887298e0), ((G, U, A, U), -5.634181969887298e0), ((A, U, G, C), -4.4889841206478724e0), ((G, C, A, U), -4.4889841206478724e0), ((C, G, G, U), -6.339699458653214e0), ((G, U, C, G), -6.339699458653214e0), ((A, U, U, G), -6.948229007956287e0), ((U, G, A, U), -6.948229007956287e0), ((U, A, U, A), -3.974789860374432e0), ((C, G, C, G), -3.178429603896564e0), ((G, C, U, G), -6.598801449409491e0), ((U, G, G, C), -6.598801449409491e0), ((C, G, U, A), -4.398743846771707e0), ((U, A, C, G), -4.398743846771707e0), ((A, U, C, G), -5.2057402952153e0), ((C, G, A, U), -5.2057402952153e0), ((U, A, U, G), -5.7365197232875325e0), ((U, G, U, A), -5.7365197232875325e0), ].iter().cloned().collect(),
      lbpaps_with_base_quadruples_2: [((U, A, A, C), -7.867410040971115e0), ((C, G, G, C), -6.9818142245162e0), ((U, G, A, G), -8.53795364553554e0), ((A, U, A, U), -5.509348535405573e0), ((G, C, A, G), -8.452460115680397e0), ((G, C, U, C), -7.970361598938911e0), ((A, U, G, G), -8.88528103400223e0), ((G, U, G, C), -7.508342028554654e0), ((C, G, A, U), -7.402964872587893e0), ((U, A, C, U), -8.702152700238035e0), ((C, G, A, A), -7.763113088685716e0), ((G, C, G, C), -4.744087198556068e0), ((U, A, C, A), -7.333667844188574e0), ((U, A, U, U), -7.417807270649003e0), ((G, U, U, C), -9.185908662599159e0), ((U, G, G, A), -9.018554873891516e0), ((C, G, U, C), -8.63935030695264e0), ((G, U, A, U), -7.831406547233362e0), ((A, U, U, G), -9.145453585289289e0), ((U, G, G, U), -9.889815631029906e0), ((U, G, U, C), -9.036490976526524e0), ((U, A, U, A), -5.478867257080809e0), ((U, A, G, U), -9.038800827411668e0), ((G, U, C, G), -8.536924035985635e0), ((C, G, G, A), -8.109269610810179e0), ((A, U, A, A), -7.455376338188574e0), ((U, A, G, C), -7.531157236334836e0), ((U, G, C, G), -7.528029895336982e0), ((G, C, A, A), -8.050744844562562e0), ((C, G, C, U), -7.887074916194758e0), ((C, G, C, C), -8.48079523169552e0), ((G, C, G, U), -7.508342028554654e0), ((C, G, A, C), -7.8034662587972985e0), ((G, C, G, A), -7.597012917430672e0), ((G, U, A, G), -8.853390673474463e0), ((A, U, U, U), -7.524924199976949e0), ((G, U, U, A), -9.038800827411668e0), ((U, G, G, C), -8.796026026742117e0), ((U, G, U, U), -8.391937718829679e0), ((A, U, C, C), -9.469724676272884e0), ((A, U, U, A), -7.524907017105826e0), ((U, A, U, C), -8.036688722655482e0), ((G, U, U, U), -8.122347931914618e0), ((U, G, U, A), -7.933744300630785e0), ((U, A, A, G), -7.901551709187957e0), ((U, G, C, U), -9.271282979735968e0), ((G, C, C, C), -8.479009148923529e0), ((A, U, A, C), -7.541893528583518e0), ((C, G, G, U), -8.536924035985635e0), ((U, A, G, A), -7.7853130456100805e0), ((U, G, C, A), -8.053566478950582e0), ((G, C, A, C), -7.11173460558544e0), ((G, C, U, G), -8.796026026742117e0), ((G, C, A, U), -6.6862086980570075e0), ((C, G, C, A), -7.103280012540425e0), ((U, A, C, G), -6.595968424183852e0), ((A, U, C, U), -8.282433680904845e0), ((U, A, A, U), -7.524907017105826e0), ((G, U, U, G), -9.889815631029906e0), ((C, G, U, G), -7.528029895336982e0), ((A, U, C, A), -8.362584466968293e0), ((A, U, U, C), -8.981292093026463e0), ((C, G, G, G), -7.990412291502722e0), ((U, G, A, C), -9.75187678071514e0), ((G, U, C, A), -9.734985924074849e0), ((G, C, C, A), -8.463143906199267e0), ((G, U, C, U), -9.013037132726373e0), ((U, A, G, G), -8.549522933251273e0), ((U, G, C, C), -1.0090852147554363e1), ((G, C, C, U), -8.760942505845037e0), ((A, U, G, C), -6.6862086980570075e0), ((G, U, G, G), -8.960693637782732e0), ((C, G, C, G), -4.682507000629327e0), ((G, C, G, G), -8.228782019384631e0), ((G, U, A, C), -8.599119874390711e0), ((C, G, U, U), -7.651605889862278e0), ((U, G, G, G), -8.77173710364139e0), ((U, A, A, A), -7.723825287328171e0), ((U, G, U, G), -7.066436476966709e0), ((G, U, C, C), -9.795075985817704e0), ((U, G, A, A), -9.097969921343976e0), ((G, C, C, G), -6.9818142245162e0), ((U, G, A, U), -9.145453585289289e0), ((A, U, A, G), -8.328679860742902e0), ((G, U, G, U), -6.874795566528475e0), ((G, C, U, A), -7.531157236334836e0), ((A, U, G, A), -8.026203871175888e0), ((G, U, G, A), -8.150485864565464e0), ((G, C, U, U), -7.684920950367407e0), ((A, U, G, U), -7.831406547233362e0), ((C, G, A, G), -7.40856381527705e0), ((U, A, C, C), -9.255493178003336e0), ((G, U, A, A), -8.923185834203085e0), ((C, G, U, A), -6.595968424183852e0), ((A, U, C, G), -7.402964872587893e0), ((U, A, U, G), -7.933744300630785e0), ].iter().cloned().collect(),
      logpps_with_base_pairs: [((U, A), -6.874628615720106e0), ((G, U), -7.990770257836652e0), ((C, G), -6.243599773680394e0), ((U, G), -7.607006718842563e0), ((A, U), -6.672336273556276e0), ((G, C), -6.298335798591062e0), ].iter().cloned().collect(),
      legpps_with_base_pairs: [((U, A), -8.833089168642335e0), ((G, U), -9.19009247736253e0), ((C, G), -8.40294456683435e0), ((U, G), -9.749062118145911e0), ((A, U), -9.061367881281926e0), ((G, C), -8.536098930938943e0), ].iter().cloned().collect(),
      llgps_with_base_triples: [((U, A, C), -9.73269910837044e0), ((U, G, U), -1.0745533047286425e1), ((U, A, U), -9.96344542363321e0), ((U, G, C), -1.0727165853351053e1), ((C, G, C), -9.142071248255982e0), ((U, A, A), -8.987093167134734e0), ((A, U, C), -9.21442354536763e0), ((G, C, G), -9.52961597184465e0), ((G, U, G), -1.0829389705358812e1), ((C, G, A), -9.241198226586993e0), ((A, U, U), -9.313779990054828e0), ((U, A, G), -9.70308661654572e0), ((C, G, U), -9.707062764925357e0), ((A, U, A), -9.56822849004289e0), ((G, U, U), -9.93023561125496e0), ((A, U, G), -9.717072858520456e0), ((G, C, C), -8.61865785131405e0), ((U, G, G), -9.937291351242273e0), ((G, U, A), -1.0756851410456987e1), ((C, G, G), -8.691655484154277e0), ((G, C, A), -9.352475773792728e0), ((U, G, A), -1.0320077104684863e1), ((G, U, C), -1.0234707423520465e1), ((G, C, U), -9.571702134728993e0), ].iter().cloned().collect(),
      lrgps_with_base_triples: [((U, A, C), -8.561600285253157e0), ((U, G, U), -9.933169455225288e0), ((U, A, U), -8.869234082959217e0), ((U, G, C), -1.0058361980129922e1), ((C, G, C), -8.529183249014125e0), ((U, A, A), -9.319569292080203e0), ((A, U, C), -9.141738303355288e0), ((G, C, G), -8.588189962626354e0), ((G, U, G), -9.822841132107232e0), ((C, G, A), -8.992125199710776e0), ((A, U, U), -9.441386941180136e0), ((U, A, G), -9.964051300658712e0), ((C, G, U), -9.211849357317625e0), ((A, U, A), -8.36414350434942e0), ((G, U, U), -1.0957075826764134e1), ((A, U, G), -9.75347118836265e0), ((G, C, C), -9.534731575720764e0), ((U, G, G), -1.0661145655008873e1), ((G, U, A), -1.0142924265233663e1), ((C, G, G), -9.519462609211457e0), ((G, C, A), -8.029723115876077e0), ((U, G, A), -1.0251733373110383e1), ((G, U, C), -9.976706802340845e0), ((G, C, U), -9.520142782195945e0), ].iter().cloned().collect(),
      lbpps_with_base_pairs: [((U, A), -3.2668792799587183e0), ((G, U), -4.328350087497726e0), ((C, G), -2.874347445173646e0), ((U, G), -4.359742242216237e0), ((A, U), -3.2728191345182913e0), ((G, C), -2.888107951505889e0), ].iter().cloned().collect(),
      lnbpps_with_bases: [(G, -1.756284475784395e0), (A, -1.445673369666511e0), (U, -1.553423086171699e0), (C, -1.795318220773576e0), ].iter().cloned().collect(),
    }
  };
}